pipeline {
    agent none
    triggers { upstream(upstreamProjects: 'docker-agent', threshold: hudson.model.Result.SUCCESS) }
    stages {
       stage('Build') {
            agent {label 'jenkinsagent'}   
            steps {
                checkout poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'ab4d2a98-78f3-4f7a-898c-354e4efda790', url: 'https://github.com/dvmaniteja/hello_world_sample.git']]]
                withMaven (maven: 'M2_HOME') {
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
                }
                zip zipFile: 'test.zip', archive: false, dir: 'webapp', overwrite: true
                archiveArtifacts artifacts: 'test.zip', fingerprint: true
              }
            post {
              always {                                                                                                                                                                      sh 'rm -rf test.zip'
              }
            }
       }  

       stage('Build docker image') {
           environment {
                DOCKER_HOST = "tcp://172.31.35.134:2375"
           }
           agent {label 'dcoker-agent'}
           steps {
             copyArtifacts filter: 'test.zip', fingerprintArtifacts: true, projectName: '${JOB_NAME}', selector: specific('${BUILD_NUMBER}')
             unzip zipFile: 'test.zip', dir: './webapp'
             sh 'ls'
             sh 'docker images'
             sh 'docker build -t ${JOB_NAME}-tomcat:${BUILD_NUMBER} .'
           }
       }

       stage('Pushing the docker image') {
            environment {
                DOCKER_HOST = "tcp://172.31.35.134:2375"
           }
            agent {label 'dcoker-agent'}
            steps {
             sh 'docker login -u eshikav -p Shiv@1991'
             sh 'docker tag ${JOB_NAME}-tomcat:${BUILD_NUMBER} eshikav/${JOB_NAME}-tomcat:${BUILD_NUMBER}'
             sh 'docker push eshikav/${JOB_NAME}-tomcat:${BUILD_NUMBER}'
           }
           post {
              always {
                sh 'docker image rm -f eshikav/${JOB_NAME}-tomcat:${BUILD_NUMBER}'
              }
           }
       }
  }
}
